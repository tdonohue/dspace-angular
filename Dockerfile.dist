# This image will be published as dspace/dspace-angular:$DSPACE_VERSION-dist
# See https://github.com/DSpace/dspace-angular/tree/main/docker for usage details

# Test build:
# docker build -f Dockerfile.dist -t dspace/dspace-angular:latest-dist .

FROM --platform=$BUILDPLATFORM node:18-alpine as build

# Ensure Python and other build tools are available
# These are needed to install some node modules, especially on linux/arm64
RUN apk add --update python3 make g++ && rm -rf /var/cache/apk/*

WORKDIR /app
COPY package.json yarn.lock ./

# This should be passed in by Docker build, see
# https://docs.docker.com/engine/reference/builder/#automatic-platform-args-in-the-global-scope
# But we default to linux/amd64 if unspecified.
ARG TARGETARCH=amd64
ARG TARGETOS=linux
ENV npm_config_arch=$TARGETARCH
ENV npm_config_platform=$TARGETOS
RUN echo "Building for ${TARGETOS}/${TARGETARCH}"
RUN echo "arch=${TARGETARCH}" > ./.npmrc
RUN echo "platform=${TARGETOS}" >> ./.npmrc
RUN yarn install --network-timeout 300000 --verbose

ADD . /app/
RUN yarn run env
RUN yarn build:prod --verbose

FROM node:18-alpine
RUN npm install --global pm2

COPY --chown=node:node --from=build /app/dist /app/dist
COPY --chown=node:node config /app/config
COPY --chown=node:node docker/dspace-ui.json /app/dspace-ui.json

WORKDIR /app
USER node
ENV NODE_ENV production
EXPOSE 4000
CMD pm2-runtime start dspace-ui.json --json
